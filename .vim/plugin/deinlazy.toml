## syntax ######################################################################

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'Matt-Deacalion/vim-systemd-syntax'
on_ft = 'systemd'

[[plugins]]
repo = 'jeroenbourgois/vim-actionscript'
on_ft = 'as'

[[plugins]]
repo = 'derekwyatt/vim-scala'
on_ft = 'scala'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown', 'mkd']
hook_add = 'let g:vim_markdown_folding_disabled = 1'

[[plugins]]
repo = 'vim-jp/cpp-vim'
on_ft = 'cpp'

## complete-source #############################################################

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'
on_i = 1

[[plugins]]
repo = 'Shougo/neco-syntax'
on_i = 1

## unite-source ################################################################

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_path = '.*'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'

## command #####################################################################

[[plugins]]
repo = 'Shougo/vinarise.vim'
on_cmd = 'Vinarise'
hook_add = 'let g:vinarise_enable_auto_detect = 1'

[[plugins]]
repo = 'edkolev/tmuxline.vim'
on_cmd = 'Tmuxline'
hook_source = 'source ~/.vim/plugin/tmuxline.rc.vim'

[[plugins]]
repo = 'LeafCage/vimhelpgenerator'
on_cmd = 'VimHelpGenerator'
hook_add = '''
  let g:vimhelpgenerator_defaultlanguage = "en"
'''

## rust ########################################################################

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
  let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'rhysd/rust-doc.vim'
on_ft = 'rust'

#[[plugins]]
#repo = 'racer-rust/vim-racer'
#on_ft = 'rust'
#hook_source = '''
#  let $RUST_SRC_PATH = expand('~/work/ext_repo/rust/src')
#  let g:racer_experimental_completer = 1
#'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
depends = 'deoplete.nvim'
on_ft = 'rust'
build = './install.sh'
hook_source = '''
  set hidden
  let g:LanguageClient_serverCommands = {
      \ 'rust': ['rustup', 'run', 'nightly', 'rls'],
      \ }
  let g:LanguageClient_autoStart = 1
  nnoremap <silent> K :call LanguageClient_textDocument_hover()<CR>
  nnoremap <silent> gd :call LanguageClient_textDocument_definition()<CR>
  nnoremap <silent> <F2> :call LanguageClient_textDocument_rename()<CR>
'''

## misc ########################################################################

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
on_i = 1
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  source ~/.vim/plugin/deoplete.rc.vim
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_event = 'BufEnter'
hook_add = '''
  let g:easy_align_delimiters = {
    \ ',': { 'pattern': ','    , 'left_margin': 0, 'right_margin': 1 },
    \ ';': { 'pattern': ';'    , 'left_margin': 0, 'right_margin': 1 },
    \ '[': { 'pattern': '['    , 'left_margin': 0, 'right_margin': 0 },
    \ ']': { 'pattern': '\]'   , 'left_margin': 0, 'right_margin': 0 },
    \ '(': { 'pattern': '('    , 'left_margin': 1, 'right_margin': 1 },
    \ ')': { 'pattern': ')'    , 'left_margin': 1, 'right_margin': 0 }
    \ }
  vmap <Enter> <Plug>(EasyAlign)
'''

